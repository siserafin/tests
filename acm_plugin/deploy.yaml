---
- name: Install flightctl deploy
  hosts: "{{ 'provisionhost[0]' if groups.get('provisionhost') else 'localhost' }}"
  remote_user: kni
  gather_facts: true
  vars:
    kubeconfig_path: "/home/kni/clusterconfigs/auth/kubeconfig"
    values_file: "/home/kni/flightctl/deploy/helm/flightctl/values.yaml"
    api_url: "https://api.apps.ocp-edge-cluster-0.qe.lab.redhat.com"
    certs_dir: "/home/kni/.flightctl/certs"
    ansible_user: kni
  environment:
    PATH: "/usr/local/bin:/usr/bin/:/usr/local/go/bin:{{ ansible_env.PATH }}"
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - name: Create Namespaces
      command: 'oc create namespace flightctl-internal'
      ignore_errors: true
    
    - name: Create Namespace
      command: 'oc create namespace flightctl-external'
      ignore_errors: true

    - name: Install flightctl with Helm
      shell: helm install --values "{{ values_file }}" flightctl ./deploy/helm/flightctl/
      args:
        chdir: /home/kni/flightctl
      ignore_errors: true

    - name: Verify devices and pods flightctl-internal
      shell: |
        oc get pods -n flightctl-internal -o json | jq -r '.items[] | select(.metadata.name | test("flightctl-db-*")).status.phase'
      register: pod_status
      until: pod_status.stdout == 'Running'
      delay: 20
      retries: 40

    - name: Verify devices and pods flightctl-external
      shell: |
        oc get pods -n flightctl-external -o json | jq -r '.items[] | select(.metadata.name | test("flightctl-api-*")).status.phase'
      register: pod_status
      until: pod_status.stdout == 'Running'
      delay: 20
      retries: 40  
   
    - name: Create certs directory
      file:
        path: "{{ certs_dir }}"
        state: directory
        mode: '0700'

    - name: Retrieve API pod name
      shell: oc get pod -n flightctl-external -l flightctl.service=flightctl-api --no-headers -o custom-columns=":metadata.name" | head -1
      register: api_pod_name

    - name: Copy certs from API pod
      shell: oc exec -n flightctl-external {{ api_pod_name.stdout }} -- cat /root/.flightctl/certs/{{ item }} > {{ certs_dir }}/{{ item }}
      loop:
        - ca.crt
        - client-enrollment.crt
        - client-enrollment.key
    
    - name: Copy certs from API pod
      shell: oc exec -n flightctl-external {{ api_pod_name.stdout }} -- cat /root/.flightctl/client.yaml > {{ certs_dir }}/client.yaml

    - name: Set permissions for certs
      become: true
      file:
        path: "{{ certs_dir }}"
        mode: '0700'
        recurse: yes

    - name: Set permissions on certificate keys
      shell: chmod og-rwx ~/.flightctl/certs/*.key
      args:
        chdir: /home/kni/flightctl

    - name: Add git config
      command: git config --global --add safe.directory /home/kni/flightctl
      args:
        chdir: /home/kni/flightctl

    - name: Run make
      command: make
      become: true
      args:
        chdir: /home/kni/flightctl

    - name: Login to flightctl
      command: ./bin/flightctl login {{ api_url }} --web --certificate-authority ~/.flightctl/certs/ca.crt
      args:
        chdir: /home/kni/flightctl


